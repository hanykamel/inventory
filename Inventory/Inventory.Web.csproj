<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup Label="Globals">
    <SccProjectName>SAK</SccProjectName>
    <SccProvider>SAK</SccProvider>
    <SccAuxPath>SAK</SccAuxPath>
    <SccLocalPath>SAK</SccLocalPath>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>59282814-553b-4e7f-b884-ecf2713d4bd8</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Hangfire.AspNetCore" Version="1.7.6" />
    <PackageReference Include="HangFire.Core" Version="1.7.6" />
    <PackageReference Include="HangFire.SqlServer" Version="1.7.6" />
    <PackageReference Include="log4net" Version="2.0.8" />
    <PackageReference Include="MediatR" Version="7.0.0" />
    <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="7.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.OData" Version="7.2.1" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.1.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="2.2.6" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.4" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\src\app\examination\create-examination\**" />
    <Compile Remove="ClientApp\src\app\home\**" />
    <Compile Remove="ClientApp\src\app\layout\**" />
    <Compile Remove="wwwroot\assets\uploads\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\app\examination\create-examination\**" />
    <Content Remove="ClientApp\src\app\home\**" />
    <Content Remove="ClientApp\src\app\layout\**" />
    <Content Remove="wwwroot\assets\uploads\**" />
    <EmbeddedResource Remove="ClientApp\src\app\examination\create-examination\**" />
    <EmbeddedResource Remove="ClientApp\src\app\home\**" />
    <EmbeddedResource Remove="ClientApp\src\app\layout\**" />
    <EmbeddedResource Remove="wwwroot\assets\uploads\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\src\app\examination\create-examination\**" />
    <None Remove="ClientApp\src\app\home\**" />
    <None Remove="ClientApp\src\app\layout\**" />
    <None Remove="wwwroot\assets\uploads\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="log4net.config" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\core\access-denied\access-denied.component.ts" />
    <None Remove="ClientApp\src\app\core\layout\layout.component.ts" />
    <None Remove="ClientApp\src\app\core\not-found\not-found.component.ts" />
    <None Remove="ClientApp\src\app\enums\budgetType.ts" />
    <None Remove="ClientApp\src\app\enums\DelegationType.ts" />
    <None Remove="ClientApp\src\app\enums\ExaminationStatusEnum.ts" />
    <None Remove="ClientApp\src\app\enums\ItemType.ts" />
    <None Remove="ClientApp\src\app\guards\Delegated.guard.ts" />
    <None Remove="ClientApp\src\app\guards\deligationTrack.guard.ts" />
    <None Remove="ClientApp\src\app\guards\StoreKeeper.guard.ts" />
    <None Remove="ClientApp\src\app\home\home.component.css" />
    <None Remove="ClientApp\src\app\home\home.component.html" />
    <None Remove="ClientApp\src\app\home\home.component.ts" />
    <None Remove="ClientApp\src\app\home\home.module.ts" />
    <None Remove="ClientApp\src\app\models\wordDocMeta.ts" />
    <None Remove="ClientApp\src\app\prime\ActionCrud\ActionPrintClass.ts" />
    <None Remove="ClientApp\src\app\prime\ActionCrud\ActionReviewNotificationClass.ts" />
    <None Remove="ClientApp\src\app\prime\ActionCrud\ActionViewClass.ts" />
    <None Remove="ClientApp\src\app\prime\ActionCrud\ChangeStatusActionHomeClass.ts" />
    <None Remove="ClientApp\src\app\prime\ColumnTypes\EnumColumn.ts" />
    <None Remove="ClientApp\src\app\prime\ColumnTypes\FristRowColum.ts" />
    <None Remove="ClientApp\src\app\prime\ColumnTypes\FristRowDataColum.ts" />
    <None Remove="ClientApp\src\app\prime\ColumnTypes\FristRowTextColum.ts" />
    <None Remove="ClientApp\src\app\prime\ColumnTypes\MixedColumn.ts" />
    <None Remove="ClientApp\src\app\prime\ColumnTypes\WarehouseStoreColumn.ts" />
    <None Remove="ClientApp\src\app\service\Models\BaseItemCheckedUnChecked.ts" />
    <None Remove="ClientApp\src\app\service\Models\ExaminationModel.ts" />
    <None Remove="ClientApp\src\app\service\Models\ExchangeOrderModel.ts" />
    <None Remove="ClientApp\src\app\service\Models\InvoiceModel.ts" />
    <None Remove="ClientApp\src\app\service\Models\LookupModel.ts" />
    <None Remove="ClientApp\src\app\service\Models\RefundOrderModel.ts" />
    <None Remove="ClientApp\src\app\service\Models\RobbingOrderModel.ts" />
    <None Remove="ClientApp\src\app\service\Models\StockTakingModel.ts" />
    <None Remove="ClientApp\src\app\service\Models\StoreItemsDistributionModel.ts" />
    <None Remove="ClientApp\src\app\service\Models\TechnicianStoreItemsModel.ts" />
    <None Remove="ClientApp\src\app\service\Models\TransformationRequestModel.ts" />
    <None Remove="ClientApp\src\app\shared\loader\loader.component.ts" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Inventory.CrossCutting\Inventory.CrossCutting.csproj" />
    <ProjectReference Include="..\inventory.Engines\inventory.Engines.csproj" />
    <ProjectReference Include="..\Inventory.Repository\Inventory.Repository.csproj" />
    <ProjectReference Include="..\Inventory.Service\Inventory.Service.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\examination\view-examination\" />
    <Folder Include="ClientApp\src\app\shared\auto-complete\" />
    <Folder Include="wwwroot\assets\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="log4net.config" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\core\not-found\not-found.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\core\access-denied\access-denied.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\core\layout\layout.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\enums\budgetType.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\enums\DelegationType.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\enums\ExaminationStatusEnum.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\enums\ItemType.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\guards\delegated.guard.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\guards\deligationTrack.guard.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\guards\StoreKeeper.guard.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\wordDocMeta.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\prime\ActionCrud\ActionPrintClass.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\prime\ActionCrud\ActionReviewNotificationClass.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\prime\ActionCrud\ActionViewClass.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\prime\ActionCrud\ChangeStatusActionHomeClass.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\prime\ColumnTypes\EnumColumn.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\prime\ColumnTypes\FristRowColum.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\prime\ColumnTypes\FristRowDataColum.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\prime\ColumnTypes\FristRowTextColum.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\prime\ColumnTypes\MixedColumn.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\prime\ColumnTypes\WarehouseStoreColumn.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\BaseItemCheckedUnChecked.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\ExaminationModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\RefundOrderModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\ExchangeOrderModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\InvoiceModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\LookupModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\RobbingOrderModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\StockTakingModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\StoreItemsDistributionModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\TechnicianStoreItemsModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\service\Models\TransformationRequestModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\loader\loader.component.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
